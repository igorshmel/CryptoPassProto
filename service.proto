syntax = "proto3";

package twirp.example.haberdasher;
option go_package = ".;twproto";

// Haberdasher service makes hats for clients.
service Haberdasher {
  // MakeHat produces a hat of mysterious, randomly-selected color!
//  rpc MakeHat(Size) returns (Hat);
  rpc Plus(PlusReq) returns (PlusRpl);
}

service Api {
  rpc Authorize(RequestAuthorization) returns (ReplayAuthorization);
}

message RequestAuthorization {
  string  email = 1;
  string  password = 2;
  string  pass = 3;
}

message ReplayAuthorization {
  int32   errno = 1;
  string  errcode = 2;
  string  errlang = 3;
}

// PlusReq
message PlusReq {
  int32 a = 1; // must be > 0
  int32 b = 2; // must be > 0
}

// PlusRpl
message PlusRpl {
  int32 answer = 1; // must be > 0
}

// Size of a Hat, in inches.
message Size {
  int32 inches = 1; // must be > 0
}

//// A Hat is a piece of headwear made by a Haberdasher.
//message Hat {
//  int32 inches = 1;
//  string color = 2; // anything but "invisible"
//  string name = 3; // i.e. "bowler"
//}